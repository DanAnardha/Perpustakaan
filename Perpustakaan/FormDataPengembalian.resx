<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TqvSB2oRcwAAAABJRU5ErkJggg==
</value>
  </data>
</root>